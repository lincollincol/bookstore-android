[versions]
applicationId = "com.linc.bookstore"
compileSdk = "33"
minSdk = "21"
targetSdk = "33"
versionCode = "1"
versionName = "1.0"

gradleplugin = "7.3.1"
kotlin = "1.7.10"
agp = "7.3.1"

compose-ui = "1.3.1"
kotlin-coroutines = "1.6.4"
retrofit = "2.9.0"
okhttp3 = "4.10.0"
room = "2.4.3"
hilt = "2.44"




[plugins]
plugin-kotlin = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
plugin-kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
plugin-android = { id = "com.android.application", version.ref = "agp" }
plugin-android-lib = { id = "com.android.library", version.ref = "agp" }
plugin-hilt = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }




[libraries]
# AndroidX
androidx-core = "androidx.core:core-ktx:1.9.0"
androidx-lifecycle = "androidx.lifecycle:lifecycle-runtime-ktx:2.5.1"
androidx-activity-compose = "androidx.activity:activity-compose:1.6.1"
# Compose
compose-material = { module = "androidx.compose.material:material", version.ref = "compose-ui" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose-ui" }
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose-ui" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose-ui" }
compose-ui-test-manifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "compose-ui" }
# Kotlin
kotlin-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlin-coroutines" }
kotlin-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlin-coroutines" }
# Retrofit
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofit-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit" }
retrofit-scalars = { module = "com.squareup.retrofit2:converter-scalars", version.ref = "retrofit" }
# OkHttp
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp3" }
okhttp-logging-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp3" }
# Room
room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
room-ktx = { module = "androidx.room:room-ktx", version.ref = "room" }
room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }
# Dagger hilt
hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "hilt" }
hilt-compiler = { module = "com.google.dagger:hilt-compiler", version.ref = "hilt" }

# Dependencies of the included build-logic
android-gradlePlugin = { group = "com.android.tools.build", name = "gradle", version.ref = "agp" }
kotlin-gradlePlugin = { group = "org.jetbrains.kotlin", name = "kotlin-gradle-plugin", version.ref = "kotlin" }

[bundles]
kotlin-coroutines = ["kotlin-coroutines-core", "kotlin-coroutines-android"]
retrofit = ["retrofit", "retrofit-gson", "retrofit-scalars"]
okhttp = ["okhttp", "okhttp-logging-interceptor"]
room = ["room-runtime", "room-ktx"]
compose-ui = ["compose-material", "compose-ui-tooling-preview", "compose-ui"]
compose-debug = ["compose-ui-tooling", "compose-ui-test-manifest"]